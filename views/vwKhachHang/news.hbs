{{#section 'css'}}
    <link rel="stylesheet" href="public/CSS/doitac.css">

{{/section}}

<head>

    <style>
        h2 {
            font-weight: bold;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        /* Style for table element */
        table {
            border-collapse: collapse;
            width: 100%;
            text-align: center;
            background-color: white; /* đổi màu nền của bảng */

        }

        /* Style for table header and data cells */
        th, td {
            padding: 8px;
            text-align: center;
            border-bottom: 1px solid #ddd;
        }

        /* Style for table row on hover */
        tr:hover {
            background-color: #f5f5f5;
        }

        /* Style for background color of an element with class 'background1' */
        .background1 {
            background-color: #FFF8F8;
            padding-top: 100px;
            height: 100vh;
        }

        /* Style for container element */
        .container {
            padding-top: 50px;
            padding-bottom: 100px;
        }

        /* Style for body element */
        body {
            font-family: Arial, sans-serif;
            background-color: #FFF8F8;
        }

        /* Style for label element */
        label {
            display: inline-block;
            width: 100px;
            margin-right: 10px;
        }

        /* Style for input element */
        input {
            padding: 5px;
            border-radius: 5px;
            border: 1px solid #ccc;
            margin-bottom: 10px;
        }

        /* Style for textarea element */
        textarea {
            padding: 5px;
            border-radius: 5px;
            border: 1px solid #ccc;
            margin-bottom: 10px;
        }

        /* Style for select element */
        select {
            padding: 5px;
            border-radius: 5px;
            border: 1px solid #ccc;
            margin-bottom: 10px;
        }

        /* Style for button element */
        button {
            padding: 10px;
            border-radius: 5px;
            border: none;
            background-color: #007bff;
            color: #fff;
            cursor: pointer;
        }
    </style>

</head>
<body>
<section class="background1">
    <h2> DANH SÁCH MÓN ĂN</h2>

    <div class="container ">
        <label for="madtDropdown">Mã đối tác:</label>
        <select id="madtDropdown">
            <option value=""></option>
            {{#each this.list}}
                <option value="{{MADT}}">{{MADT}}</option>
            {{/each}}
        </select>
        <br>
        <label for="macnDropdown">Mã chi nhánh:</label>
        <select id="macnDropdown">
            <option value=""></option>
            {{#each this.list4}}
                <option value="{{MACN}}">{{MACN}}</option>
            {{/each}}
        </select>


        <br>
        <label for="matddaDropdown">Mã Thực đơn:</label>
        <select id="matddaDropdown">
            <option value=""></option>
            {{#each this.list1}}
                <option value="{{MATD_DA}}">{{MATD_DA}}</option>
            {{/each}}
        </select>
        <br>
        <label for="mamaDropdown">Tên Món Ăn:</label>
        <select id="mamaDropdown">
            <option value=""></option>
            {{#each this.list2}}
                <option value="{{MAMA}}">{{TENMA}}</option>
            {{/each}}
        </select>
        <br>
        <!--        <label for="SoluongInput">Số Lượng:</label>-->
        <!--        <input type="number" id="SoluongInput">-->
        <br>
        <button id="updateButton">Mua</button>
        <br>
        <table>
            <thead>
            <tr>
                <th>Mã chi nhánh</th>

                <th>Mã thực đơn</th>
                <th>Mã món ăn</th>
                <th>Tên món ăn</th>
                <th>Giá</th>
                <th>Miêu tả</th>
                <th>Số lượng</th>

                <!--                    <th>Số lượng món</th>-->
                <!--                    <th></th>-->
                <!--                    <th></th>-->
                <!--                    <th></th>-->
                <!--                    <th></th>-->
                <!--                    <th></th>-->


            </tr>
            </thead>
            <tbody>
            {{#each this.list2}}
                <tr>
                    <td>{{MACN}}</td>

                    <td>{{MATD_DA}}</td>
                    <td>{{MAMA}}</td>
                    <td>{{TENMA}}</td>
                    <td>{{GIA}}</td>
                    <td>{{MIEUTA}}</td>
                    <td>{{SOLUONG}}</td>

                </tr>
            {{/each}}

            </tbody>
        </table>

        <!--            <label for="tenMAInput">Tên món ăn:</label>-->
        <!--            <input type="text" id="tenMAInput" readonly>-->
        <!--            <br>-->
        <!--            <label for="giaInput">Giá:</label >-->
        <!--            <input type="number" id="giaInput" readonly>-->
        <!--            <br>-->
        <!--            <label for="mieutaInput">Miêu tả:</label>-->

        <!--            <textarea id="mieutaInput" readonly ></textarea>-->
        <!--            <br>-->
        <!--            <label for="muahangDropdown">Hình thức thanh toán:</label>-->
        <!--            <select id="muahangDropdown">-->
        <!--                <option value="tienmat">Thanh toán trực tiếp </option>-->
        <!--                <option value="Momo">Momo </option>-->
        <!--                <option value="Zalopay">Zalopay </option>-->
        <!--            </select>-->
        <!--            <br>-->


    </div>

</section>
</body>
<script>
    const macnDropdown = document.getElementById('macnDropdown');

    const madtDropdown = document.getElementById('madtDropdown');
    const matddaDropdown = document.getElementById('matddaDropdown');
    const mamaDropdown = document.getElementById('mamaDropdown');
    const giaInput = document.getElementById('giaInput');
    const mieutaInput = document.getElementById('mieutaInput');
    // const tenTDInput = document.getElementById('tenTDInput');
    const tenMAInput = document.getElementById('tenMAInput');
    // const tenDTInput = document.getElementById('tenDTInput');
    const tableBody = document.querySelector("tbody");

    // macnDropdown.addEventListener('change', async () => {
    //     const selectedMacn = macnDropdown.value;
    //
    //     // make an AJAX request to the server to get the corresponding Mã Thực đơn data
    //     const xhr = new XMLHttpRequest();
    //     xhr.open('GET', `/api/madt?macn=${selectedMacn}`);
    //     xhr.onload = () => {
    //         if (xhr.status === 200) {
    //             // parse the response data and update the Mã Thực đơn dropdown options
    //             const madtData = JSON.parse(xhr.responseText);
    //             madtDropdown.innerHTML = '';
    //             madtDropdown.appendChild(document.createElement('option'));
    //             madtData.forEach((item) => {
    //                 const option = document.createElement('option');
    //                 option.value = item.MADT;
    //                 option.textContent = item.MADT;
    //                 madtDropdown.appendChild(option);
    //             });
    //
    //
    //
    //         } else {
    //             // handle errors
    //             console.error('Error:', xhr.statusText);
    //         }
    //     };
    //     xhr.onerror = () => {
    //         console.error('Error:', xhr.statusText);
    //     };
    //     xhr.send();
    //     // try {
    //     //     const response = await fetch(`/api/matdda?madt=${selectedMadt}`);
    //     //     const matddaData = await response.json();
    //     //     // update the price and description input fields
    //     //
    //     //     tenTDInput.value = matddaData[0].TENTDDA;
    //     // } catch (error) {
    //     //     // handle errors
    //     //     console.error('Error:', error);
    //     // }
    // });
    // listen to the change event on the Mã đối tác dropdown
    madtDropdown.addEventListener('change', async () => {
        // get the selected Mã đối tác value
        const selectedMadt = madtDropdown.value;

        // make an AJAX request to the server to get the corresponding Mã Thực đơn data
        const xhr = new XMLHttpRequest();
        xhr.open('GET', `/api/matdda?madt=${selectedMadt}`);
        xhr.onload = () => {
            if (xhr.status === 200) {
                // parse the response data and update the Mã Thực đơn dropdown options
                const matddaData = JSON.parse(xhr.responseText);
                matddaDropdown.innerHTML = '';
                matddaDropdown.appendChild(document.createElement('option'));
                matddaData.forEach((item) => {
                    const option = document.createElement('option');
                    option.value = item.MATD_DA;
                    option.textContent = item.MATD_DA;
                    matddaDropdown.appendChild(option);
                });


            } else {
                // handle errors
                console.error('Error:', xhr.statusText);
            }
        };
        xhr.onerror = () => {
            console.error('Error:', xhr.statusText);
        };
        xhr.send();

        const xhr1 = new XMLHttpRequest();
        xhr1.open('GET', `/api/macn?madt=${selectedMadt}`);
        xhr1.onload = () => {
            if (xhr1.status === 200) {
                // parse the response data and update the Mã Thực đơn dropdown options
                const macnData = JSON.parse(xhr1.responseText);
                macnDropdown.innerHTML = '';
                macnDropdown.appendChild(document.createElement('option'));
                macnData.forEach((item) => {
                    const option = document.createElement('option');
                    option.value = item.MACN;
                    option.textContent = item.MACN;
                    macnDropdown.appendChild(option);
                });


            } else {
                // handle errors
                console.error('Error:', xhr.statusText);
            }
        };
        xhr1.onerror = () => {
            console.error('Error:', xhr.statusText);
        };
        xhr1.send();

    });
    macnDropdown.addEventListener('change', async () => {
        let selectedMacn = macnDropdown.value;
        selectedMacn = selectedMacn.replace(/\s+/g, '');
        const selectedMatdda = matddaDropdown.value;
        if (selectedMacn !== "") {
            if (selectedMatdda !== "") {
                const xhr = new XMLHttpRequest();
                console.log(selectedMatdda)
                xhr.open('GET', `/api/mamamacnmatd?macn=${selectedMacn}&matdda=${selectedMatdda}`);
                xhr.onload = () => {
                    if (xhr.status === 200) {
                        // parse the response data and update the Mã Thực đơn dropdown options
                        const mamaData = JSON.parse(xhr.responseText);
                        tableBody.innerHTML = "";
                        mamaData.forEach((item) => {
                            const tr = document.createElement("tr");
                            tr.innerHTML = `
                    <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                            tableBody.appendChild(tr);
                        });
                        // tenTDInput.value = mamaData[0].TENTDDA;

                        // tenMAInput.value = mamaData[0].TENMA;

                    } else {
                        // handle errors
                        console.error('Error:', xhr.statusText);
                    }
                };
                xhr.onerror = () => {
                    console.error('Error:', xhr.statusText);
                };
                xhr.send();
            }
            else {
                const xhr = new XMLHttpRequest();
                console.log(selectedMatdda)
                xhr.open('GET', `/api/mamamacn?macn=${selectedMacn}`);
                xhr.onload = () => {
                    if (xhr.status === 200) {
                        // parse the response data and update the Mã Thực đơn dropdown options
                        const mamaData = JSON.parse(xhr.responseText);
                        tableBody.innerHTML = "";
                        mamaData.forEach((item) => {
                            const tr = document.createElement("tr");
                            tr.innerHTML = `
                    <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                            tableBody.appendChild(tr);
                        });
                        // tenTDInput.value = mamaData[0].TENTDDA;

                        // tenMAInput.value = mamaData[0].TENMA;

                    } else {
                        // handle errors
                        console.error('Error:', xhr.statusText);
                    }
                };
                xhr.onerror = () => {
                    console.error('Error:', xhr.statusText);
                };
                xhr.send();
            }
        }
        else {
            if (selectedMatdda !== "") {
                const xhr = new XMLHttpRequest();
                console.log(selectedMatdda)
                xhr.open('GET', `/api/mamamatd?matdda=${selectedMatdda}`);
                xhr.onload = () => {
                    if (xhr.status === 200) {
                        // parse the response data and update the Mã Thực đơn dropdown options
                        const mamaData = JSON.parse(xhr.responseText);
                        tableBody.innerHTML = "";
                        mamaData.forEach((item) => {
                            const tr = document.createElement("tr");
                            tr.innerHTML = `
                    <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                            tableBody.appendChild(tr);
                        });
                        // tenTDInput.value = mamaData[0].TENTDDA;

                        // tenMAInput.value = mamaData[0].TENMA;

                    } else {
                        // handle errors
                        console.error('Error:', xhr.statusText);
                    }
                };
                xhr.onerror = () => {
                    console.error('Error:', xhr.statusText);
                };
                xhr.send();
            }
            else {
                const xhr = new XMLHttpRequest();
                console.log(selectedMatdda)
                xhr.open('GET', `/api/allmama`);
                xhr.onload = () => {
                    if (xhr.status === 200) {
                        // parse the response data and update the Mã Thực đơn dropdown options
                        const mamaData = JSON.parse(xhr.responseText);
                        tableBody.innerHTML = "";
                        mamaData.forEach((item) => {
                            const tr = document.createElement("tr");
                            tr.innerHTML = `
                    <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                            tableBody.appendChild(tr);
                        });
                        // tenTDInput.value = mamaData[0].TENTDDA;

                        // tenMAInput.value = mamaData[0].TENMA;

                    } else {
                        // handle errors
                        console.error('Error:', xhr.statusText);
                    }
                };
                xhr.onerror = () => {
                    console.error('Error:', xhr.statusText);
                };
                xhr.send();
            }
        }
    });
    matddaDropdown.addEventListener('change', async () => {
        // get the selected Mã đối tác value
        let selectedMacn = macnDropdown.value;
        selectedMacn = selectedMacn.replace(/\s+/g, '');
        const selectedMatdda = matddaDropdown.value;
        if (selectedMatdda !== "") {
            if (selectedMacn !== "") {
                const xhr = new XMLHttpRequest();
                console.log(selectedMatdda)
                xhr.open('GET', `/api/mamamacnmatd?macn=${selectedMacn}&matdda=${selectedMatdda}`);
                xhr.onload = () => {
                    if (xhr.status === 200) {
                        // parse the response data and update the Mã Thực đơn dropdown options
                        const mamaData = JSON.parse(xhr.responseText);
                        mamaDropdown.innerHTML = '';
                        mamaDropdown.appendChild(document.createElement('option'));
                        tableBody.innerHTML = "";
                        mamaData.forEach((item) => {
                            const option = document.createElement('option');
                            option.value = item.MAMA;
                            option.textContent = item.TENMA;
                            mamaDropdown.appendChild(option);
                            const tr = document.createElement("tr");
                            tr.innerHTML = `
                    <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                            tableBody.appendChild(tr);
                        });
                        // tenTDInput.value = mamaData[0].TENTDDA;

                        // tenMAInput.value = mamaData[0].TENMA;

                    } else {
                        // handle errors
                        console.error('Error:', xhr.statusText);
                    }
                };
                xhr.onerror = () => {
                    console.error('Error:', xhr.statusText);
                };
                xhr.send();
            }
            else {
                const xhr = new XMLHttpRequest();
                xhr.open('GET', `/api/mama?matdda=${selectedMatdda}`);
                xhr.onload = () => {
                    if (xhr.status === 200) {
                        // parse the response data and update the Mã Thực đơn dropdown options
                        const mamaData = JSON.parse(xhr.responseText);
                        mamaDropdown.innerHTML = '';
                        mamaDropdown.appendChild(document.createElement('option'));
                        tableBody.innerHTML = "";
                        mamaData.forEach((item) => {
                            const option = document.createElement('option');
                            option.value = item.MAMA;
                            option.textContent = item.TENMA;
                            mamaDropdown.appendChild(option);
                            const tr = document.createElement("tr");
                            tr.innerHTML = `
                    <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                            tableBody.appendChild(tr);
                        });
                        // tenTDInput.value = mamaData[0].TENTDDA;

                        // tenMAInput.value = mamaData[0].TENMA;

                    } else {
                        // handle errors
                        console.error('Error:', xhr.statusText);
                    }
                };
                xhr.onerror = () => {
                    console.error('Error:', xhr.statusText);
                };
                xhr.send();
            }
        }
        else {
            if (selectedMacn !== "") {
                const xhr = new XMLHttpRequest();
                console.log(selectedMatdda)
                xhr.open('GET', `/api/mamamacn?macn=${selectedMacn}`);
                xhr.onload = () => {
                    if (xhr.status === 200) {
                        // parse the response data and update the Mã Thực đơn dropdown options
                        const mamaData = JSON.parse(xhr.responseText);
                        mamaDropdown.innerHTML = '';
                        mamaDropdown.appendChild(document.createElement('option'));
                        tableBody.innerHTML = "";
                        mamaData.forEach((item) => {
                            const option = document.createElement('option');
                            option.value = item.MAMA;
                            option.textContent = item.TENMA;
                            mamaDropdown.appendChild(option);
                            const tr = document.createElement("tr");
                            tr.innerHTML = `
                    <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                            tableBody.appendChild(tr);
                        });
                        // tenTDInput.value = mamaData[0].TENTDDA;

                        // tenMAInput.value = mamaData[0].TENMA;

                    } else {
                        // handle errors
                        console.error('Error:', xhr.statusText);
                    }
                };
                xhr.onerror = () => {
                    console.error('Error:', xhr.statusText);
                };
                xhr.send();
            }
            else {
                const xhr = new XMLHttpRequest();
                xhr.open('GET', `/api/allmama`);
                xhr.onload = () => {
                    if (xhr.status === 200) {
                        // parse the response data and update the Mã Thực đơn dropdown options
                        const mamaData = JSON.parse(xhr.responseText);
                        mamaDropdown.innerHTML = '';
                        mamaDropdown.appendChild(document.createElement('option'));
                        tableBody.innerHTML = "";
                        mamaData.forEach((item) => {
                            const option = document.createElement('option');
                            option.value = item.MAMA;
                            option.textContent = item.TENMA;
                            mamaDropdown.appendChild(option);
                            const tr = document.createElement("tr");
                            tr.innerHTML = `
                     <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                            tableBody.appendChild(tr);
                        });
                        // tenTDInput.value = mamaData[0].TENTDDA;

                        // tenMAInput.value = mamaData[0].TENMA;

                    } else {
                        // handle errors
                        console.error('Error:', xhr.statusText);
                    }
                };
                xhr.onerror = () => {
                    console.error('Error:', xhr.statusText);
                };
                xhr.send();
            }
        }
        // make an AJAX request to the server to get the corresponding Mã Thực đơn data


    });
    mamaDropdown.addEventListener('change', async () => {
        // get the selected Mã món ăn value
        const selectedMama = mamaDropdown.value;
        const selectedMatdda = matddaDropdown.value;
        let selectedMacn = macnDropdown.value;
        selectedMacn = selectedMacn.replace(/\s+/g, '');
        // make an AJAX request to the server to get the corresponding Món ăn data
        // const xhr = new XMLHttpRequest();
        // xhr.open('GET', `/api/monan?mama=${selectedMama}&matd=${selectedMatdda}`);
        // xhr.onload = () => {
        //     if (xhr.status === 200) {
        //         // parse the response data and update the price and description input fields
        //         const monanData = JSON.parse(xhr.responseText);
        //         giaInput.value = monanData[0].GIA;
        //         mieutaInput.value = monanData[0].MIEUTA;
        //         tenMAInput.value = monanData[0].TENMA;
        //
        //     } else {
        //         // handle errors
        //         console.error('Error:', xhr.statusText);
        //     }
        // };
        // xhr.onerror = () => {
        //     console.error('Error:', xhr.statusText);
        // };
        // xhr.send();

        // const selectedValue = dropdown.value;
        if (selectedMama === "") {
            if (selectedMatdda !== "") {
                if (selectedMacn !== "") {
                    const xhr = new XMLHttpRequest();
                    console.log(selectedMatdda)
                    xhr.open('GET', `/api/mamamacnmatd?macn=${selectedMacn}&matdda=${selectedMatdda}`);
                    xhr.onload = () => {
                        if (xhr.status === 200) {
                            // parse the response data and update the Mã Thực đơn dropdown options
                            const mamaData = JSON.parse(xhr.responseText);
                            tableBody.innerHTML = "";
                            mamaData.forEach((item) => {
                                const tr = document.createElement("tr");
                                tr.innerHTML = `
                    <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                                tableBody.appendChild(tr);
                            });
                            // tenTDInput.value = mamaData[0].TENTDDA;

                            // tenMAInput.value = mamaData[0].TENMA;

                        } else {
                            // handle errors
                            console.error('Error:', xhr.statusText);
                        }
                    };
                    xhr.onerror = () => {
                        console.error('Error:', xhr.statusText);
                    };
                    xhr.send();
                }
                else {
                    const xhr = new XMLHttpRequest();
                    xhr.open('GET', `/api/mama?matdda=${selectedMatdda}`);
                    xhr.onload = () => {
                        if (xhr.status === 200) {
                            // parse the response data and update the Mã Thực đơn dropdown options
                            const mamaData = JSON.parse(xhr.responseText);
                            mamaDropdown.innerHTML = '';
                            mamaDropdown.appendChild(document.createElement('option'));
                            tableBody.innerHTML = "";
                            mamaData.forEach((item) => {
                                const option = document.createElement('option');
                                option.value = item.MAMA;
                                option.textContent = item.TENMA;
                                mamaDropdown.appendChild(option);
                                const tr = document.createElement("tr");
                                tr.innerHTML = `
                    <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                                tableBody.appendChild(tr);
                            });
                            // tenTDInput.value = mamaData[0].TENTDDA;

                            // tenMAInput.value = mamaData[0].TENMA;

                        } else {
                            // handle errors
                            console.error('Error:', xhr.statusText);
                        }
                    };
                    xhr.onerror = () => {
                        console.error('Error:', xhr.statusText);
                    };
                    xhr.send();
                }
            }
            else {
                if (selectedMacn !== "") {
                    const xhr = new XMLHttpRequest();
                    console.log(selectedMatdda)
                    xhr.open('GET', `/api/mamamacn?macn=${selectedMacn}`);
                    xhr.onload = () => {
                        if (xhr.status === 200) {
                            // parse the response data and update the Mã Thực đơn dropdown options
                            const mamaData = JSON.parse(xhr.responseText);
                            tableBody.innerHTML = "";
                            mamaData.forEach((item) => {
                                const tr = document.createElement("tr");
                                tr.innerHTML = `
                    <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                                tableBody.appendChild(tr);
                            });
                            // tenTDInput.value = mamaData[0].TENTDDA;

                            // tenMAInput.value = mamaData[0].TENMA;

                        } else {
                            // handle errors
                            console.error('Error:', xhr.statusText);
                        }
                    };
                    xhr.onerror = () => {
                        console.error('Error:', xhr.statusText);
                    };
                    xhr.send();
                }
                else {
                    const xhr = new XMLHttpRequest();
                    xhr.open('GET', `/api/allmama`);
                    xhr.onload = () => {
                        if (xhr.status === 200) {
                            // parse the response data and update the Mã Thực đơn dropdown options
                            const mamaData = JSON.parse(xhr.responseText);
                            mamaDropdown.innerHTML = '';
                            mamaDropdown.appendChild(document.createElement('option'));
                            tableBody.innerHTML = "";
                            mamaData.forEach((item) => {
                                const option = document.createElement('option');
                                option.value = item.MAMA;
                                option.textContent = item.TENMA;
                                mamaDropdown.appendChild(option);
                                const tr = document.createElement("tr");
                                tr.innerHTML = `
                     <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                                tableBody.appendChild(tr);
                            });
                            // tenTDInput.value = mamaData[0].TENTDDA;

                            // tenMAInput.value = mamaData[0].TENMA;

                        } else {
                            // handle errors
                            console.error('Error:', xhr.statusText);
                        }
                    };
                    xhr.onerror = () => {
                        console.error('Error:', xhr.statusText);
                    };
                    xhr.send();
                }
            }
        } else {
            if (selectedMacn !== "") {
                if (selectedMatdda !== "") {
                    fetch(`/api/monanmamamatdmacn?mama=${selectedMama}&matd=${selectedMatdda}&macn=${selectedMacn}`)
                            .then(response => response.json())
                            .then(data => {
                                // Clear the existing rows in the table body
                                tableBody.innerHTML = "";

                                // Loop through the new data and append rows to the table body
                                data.forEach(item => {
                                    const tr = document.createElement("tr");
                                    tr.innerHTML = `
                      <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                                    tableBody.appendChild(tr);
                                });
                            })
                            .catch(error => {
                                console.error(error);
                            });
                }
                else {
                    fetch(`/api/monanmamamacn?mama=${selectedMama}&macn=${selectedMacn}`)
                            .then(response => response.json())
                            .then(data => {
                                // Clear the existing rows in the table body
                                tableBody.innerHTML = "";

                                // Loop through the new data and append rows to the table body
                                data.forEach(item => {
                                    const tr = document.createElement("tr");
                                    tr.innerHTML = `
                      <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                                    tableBody.appendChild(tr);
                                });
                            })
                            .catch(error => {
                                console.error(error);
                            });
                }

            }
            else {
                if (selectedMatdda !== "") {
                    fetch(`/api/monan?mama=${selectedMama}&matd=${selectedMatdda}`)
                            .then(response => response.json())
                            .then(data => {
                                // Clear the existing rows in the table body
                                tableBody.innerHTML = "";

                                // Loop through the new data and append rows to the table body
                                data.forEach(item => {
                                    const tr = document.createElement("tr");
                                    tr.innerHTML = `
                      <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                                    tableBody.appendChild(tr);
                                });
                            })
                            .catch(error => {
                                console.error(error);
                            });
                }
                else {
                    var selectedOption = mamaDropdown.selectedOptions[0];
                    var tenma = selectedOption.textContent;
                    fetch(`/api/monantenma?tenma=${tenma}`)
                            .then(response => response.json())
                            .then(data => {
                                // Clear the existing rows in the table body
                                tableBody.innerHTML = "";

                                // Loop through the new data and append rows to the table body
                                data.forEach(item => {
                                    const tr = document.createElement("tr");
                                    tr.innerHTML = `
                      <td>${item.MACN}</td>
                      <td>${item.MATD_DA}</td>
                      <td>${item.MAMA}</td>
                        <td>${item.TENMA}</td>
                    <td>${item.GIA}</td>
                    <td>${item.MIEUTA}</td>
                    <td>${item.SOLUONG}</td>
                    `;
                                    tableBody.appendChild(tr);
                                });
                            })
                            .catch(error => {
                                console.error(error);
                            });
                }
            }

        }
        // Send an AJAX request to the server to fetch the new data

    });


</script>